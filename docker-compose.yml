version: '2.3'
services:
  nodestatus:
    image: ghcr.io/wy580477/nodestatus-docker:latest
    container_name: nodestatus
    restart: unless-stopped
    logging:
      driver: "journald"
      options:
        tag: "{{.Name}}"
    volumes:
      - /usr/local/NodeStatus/server:/usr/local/NodeStatus/server
      - /tmp:/tmp:rw
    ports:
      - "443:3000"
      # 提供 Web 服务的端口，如果需要禁用 Caddy 自动开启的 https，需将 443 改为 其它端口。
      - "80:80"
      # Caddy 自动申请证书 http 验证所使用的端口。如果使用 Cloudflare API 申请证书，此项可以删除。
    environment:
      USER: "admin"
      # 访问状态页用户名。
      PASSWORD: "password"
      # 访问状态页密码，务必设置为强密码。
      NO_AUTH: "Disable"
      # 设置为"Enable"则不需要用户名/密码即可访问状态页。
      WEB_USERNAME: "admin"
      # WEB 管理面板用户名
      WEB_PASSWORD: ""
      # WEB 管理面板密码，务必设置为强密码。
      WEB_SECRET: ""
      # 用于 jsonwebtoken, 建议设为一个随机的字符串, 默认不填即和密码相同。
      CADDY_DOMAIN: ""
      # 域名设置为有效域名（可以解析到你的host）,并且80端口面向公网开放，就可启用caddy的自动申请证书开启https功能。
      # 如果在下面CADDY_EMAIL项中设置Cloudflare的DNS API申请证书，则无需占用80端口。
      # 如何使用Cloudflare DNS provider插件: https://caddy.community/t/how-to-use-dns-provider-modules-in-caddy-2/8148
      # 保持默认空值，关闭Caddy的自动https功能。
      CADDY_EMAIL: "internal"
      # 接受证书颁发机构通知邮件的地址，可以填虚假地址。
      # 可以通过Cloudflare的DNS API申请证书, 变量值需设置为"{\n dns cloudflare your_cloudflare_api_key \n}"。
      # 默认值internal为使用caddy自签证书。
      USE_PUSH: "true"
      # 是否使用 Telegram 推送, 默认"true"。
      TGBOT_TOKEN: ""
      # Telegram Bot Token (从 @BotFather 处申请到)。
      TGBOT_CHATID: ""
      # Telegram Bot 需要推送的 chat_id, 如不清楚可以先启动 NodeStatus, 对 Bot 发送 /start 获取这个 id, 多个请用 , 隔开。
      TZ: Asia/Shanghai
      # 指定时区。时区列表: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones

      # 以下为可选项，不需要修改的请保持默认值。详细说明请参考: https://github.com/cokemine/nodestatus#environment
      VERBOSE: "false"
      PING_INTERVAL: 30

      USE_IPC: "true"
      USE_WEB: "true"

      WEB_THEME: "hotaru-theme"
      WEB_TITLE: "Server Status"
      WEB_SUBTITLE: "Servers' Probes Set up with NodeStatus"
      WEB_HEADTITLE: "NodeStatus"

      PUSH_TIMEOUT: 120
      PUSH_DELAY: 15

      TGBOT_PROXY: ""
      TGBOT_WEBHOOK: ""
